<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link rel="stylesheet" href="stylesheets/style2.css" />
  </head>
  <body>
    <div class="wrapper">
      <h1>Support Staff Workload System</h1>
      <p id="error-message"></p>
      <form id="form" method="post" action="/api/login">
        <div>
          <label for="email-input">
            <span>@</span>
          </label>
          <input
            type="text"
            name="email"
            id="email-input"
            placeholder="Email"
          />
        </div>
        <div>
          <label for="password-input">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              height="24"
              viewBox="0 -960 960 960"
              width="24"
            >
              <path
                d="M240-80q-33 0-56.5-23.5T160-160v-400q0-33 23.5-56.5T240-640h40v-80q0-83 58.5-141.5T480-920q83 0 141.5 58.5T680-720v80h40q33 0 56.5 23.5T800-560v400q0 33-23.5 56.5T720-80H240Zm240-200q33 0 56.5-23.5T560-360q0-33-23.5-56.5T480-440q-33 0-56.5 23.5T400-360q0 33 23.5 56.5T480-280ZM360-640h240v-80q0-50-35-85t-85-35q-50 0-85 35t-35 85v80Z"
              />
            </svg>
          </label>
          <input
            type="password"
            name="password"
            id="password-input"
            placeholder="Password"
          />
        </div>
        <button type="submit">เข้าสู่ระบบ</button>
      </form>
      <p>เข้าสู่ระบบผ่าน <a href="/api/google">google</a></p>
    </div>

    <script>
      const form = document.getElementById("form");
      const firstname_input = document.getElementById("firstname-input");
      const email_input = document.getElementById("email-input");
      const password_input = document.getElementById("password-input");
      const repeat_password_input = document.getElementById(
        "repeat-password-input"
      );
      const error_message = document.getElementById("error-message");

      form.addEventListener("submit", (e) => {
        let errors = [];

        if (firstname_input) {
          // If we have a firstname input then we are in the signup
          errors = getSignupFormErrors(
            firstname_input.value,
            email_input.value,
            password_input.value,
            repeat_password_input.value
          );
        } else {
          // If we don't have a firstname input then we are in the login
          errors = getLoginFormErrors(email_input.value, password_input.value);
        }

        if (errors.length > 0) {
          // If there are any errors
          e.preventDefault();
          error_message.innerText = errors.join(". ");
        }
      });

      function getSignupFormErrors(firstname, email, password, repeatPassword) {
        let errors = [];

        if (firstname === "" || firstname == null) {
          errors.push("Firstname is required");
          firstname_input.parentElement.classList.add("incorrect");
        }
        if (email === "" || email == null) {
          errors.push("Email is required");
          email_input.parentElement.classList.add("incorrect");
        }
        if (password === "" || password == null) {
          errors.push("Password is required");
          password_input.parentElement.classList.add("incorrect");
        }
        if (password.length < 8) {
          errors.push("Password must have at least 8 characters");
          password_input.parentElement.classList.add("incorrect");
        }
        if (password !== repeatPassword) {
          errors.push("Password does not match repeated password");
          password_input.parentElement.classList.add("incorrect");
          repeat_password_input.parentElement.classList.add("incorrect");
        }

        return errors;
      }

      function getLoginFormErrors(email, password) {
        let errors = [];

        if (email === "" || email == null) {
          errors.push("Email is required");
          email_input.parentElement.classList.add("incorrect");
        }
        if (password === "" || password == null) {
          errors.push("Password is required");
          password_input.parentElement.classList.add("incorrect");
        }

        return errors;
      }

      const allInputs = [
        firstname_input,
        email_input,
        password_input,
        repeat_password_input,
      ].filter((input) => input != null);

      allInputs.forEach((input) => {
        input.addEventListener("input", () => {
          if (input.parentElement.classList.contains("incorrect")) {
            input.parentElement.classList.remove("incorrect");
            error_message.innerText = "";
          }
        });
      });
    </script>
  </body>
</html>
